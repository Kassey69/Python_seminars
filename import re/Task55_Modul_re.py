# Модуль re

# Вытащить из выражения все числа варианты

import re
from this import d
str = 'Это сторока 100 и в 490289 которой 98 есть числа 1 3 4'
result = ''
for char in str:
    if char.isdigit():
        result += char
    else:
        result += ' '
print(result.split()) # первый варинат долгий 

print(re.findall(r'\d+', str)) # тот же варинат но в 1 строчку

# 2 Рассмотрим якоря
# ^ - начало строки
# $ - конец строки

# 3 Границы слов
# \b - начало и конец слова
# пример такое выражение Py\b нужно чтобы найти все слова оканчивающиеся на Py
# или начинаются на P  - \bP

# F e насPy были и так далееPy 

# 4. Или - | - означает что у нас в строке есть слово привет или слово пока или оба одновременно
# привет | Пока

# Привет и пока
# Привет друг
# Пока брат

# 5. Скобочные выражения испольхуются для перечисления символов и обозначают любой символ из перечисленных в скобках
# [.,!?] - или точка или запятая или восклицательный или вопросительный знак
# Запятая, Точка . ААААА!  Что?
# Другой вариант одна любая цифра от 0 до 9 [0123456789]
# 1. 8 800 пять пятьб пять - 3 пять - три 5

# Range ( диапазон отрезок) [0-9] тоже самое что и [0123456789]
# привмеры [a-z] - 1 любая буква от a до z
# [a-zA-Z] - 1 любая буква от a до z в верхнем или нижнем регистре
# [0-9a-z] - 1 любая цифра от 0 до 9 или 1 любая буква от a до z
# [0-9a-z!#] - 1 любая цифра от 0 до 9 или 1 любая буква от a до z, или ! или # 

# ^[!/]бот
# /бот   <--
# !бот   <--

# символ отрицание [^...] 
# [^0-9] - 1 любой символ ероме цифр от 0 до 9
# [^0-9a-z] - 1 любой символ ероме цифр от 0 до 9 и букв от a до z
# \n[^ABC] - слово которое начинается с любой буквы, кроме А, В, С

# 6. Классы символов
# \d - любая цифра (сокращено от [0-9])
# \D - любая не цифра (сокращено от [^0-9])
# \w - любой алфавитно-цифровой символ или (сокращшенно от [a-zA-Za -яА-Я0-9_])
# \W - любой не алфавитно-цифровой символ или не _ (сокращшенно от [^a-zA-Za -яА-Я0-9_])
# \s - пробельный символ (табуляция и разрыв строки, сокращенно от [ ])
# \S - любой непробельный символ (табуляция и разрыв строки, сокращенно от [^ ])
# . - 1 любой символ

#  Так например мы можем найти все номера элементов списка , тоесть все строки которые начинаются с символов номера
#  а после него идет одна любая цифра
#  №\d

#  #1 дылва   <--
#  №2 seflkm   <--
#  № sldkgjf
# ава  
# 4 авп

# 7. Количетсво символов (квантификаторы)
# {min, max} - указание количество вхождений

# [0-9] - это даст 1 любую цифру что ниже
# 1 35  3434838 38 348384 3

# [0-9]{3} - это даст 3 любых цифр подряд
# 1 35  3434838 38 348384 3

# [0-9] {3,5} от 3 до 5 
# 1 35  3434838 38 348384 3

# [0-9]+ - плюс обозначает от 1 до бесконечности цифр подряд, (тоже самое, что и [0-9]{1,} )
# [0-9]* - звездочка обозначает от 0 до бесконечности цифр подряд (тоже самое, что и [0-9]{0,} )
# [0-9]? - вопросительный знак это 0 или 1 вхождение (тоже самое, что и [0-9]{0,1} )

# Давайте найдем все слова в строке и числа пропустим [a-zA-Z]+

# wieufw  woeif zojdi 982 32 dsoij 329243 s 8203 sd 20938  
# wieufw  woeif zojdi dsoij s sd  <--

# если мы хотим получить только числа то используем такое выражение [0-9]+
# wkjn 34 oaijakl  43 324  ждывадл
# wkjn 34 oaijakl  43 324  ждывадл
# 34  43 324  <--

# для поиска только даты в формате число день слово месяц  [0-9]+[a-zA-Z]+[0-9]+
# sdlfk 23l23glkkfdslkf ывадлаовылдвоа 324 о 19 May 2076 erwgff34g3 
# 19 May 2076 <--

# 8. Экранирование 
#  + * ? {} () \ - специальные символы
# Поэтому если мы хотим указать конкретно например символ +, то его нужно экранировать с помощью обратного \
# Специальный символ: +
# Специальный "Плюс": \+

# Давайте вытащим все числа из текста
# \+|\-?\d+
# Я родился 18 июля 1998 года. Вечером в 18-00  на улице было +33 градуса но лучше было бы -33
# --> 18 1998 18-00 +33 -33

# \+ -> конкретно знак +,  | -> или,  \- -> конекретно знак -,  ? -> 0 или 1 появления - 
# у нас может быть один знак плюс или минус или вообще ничего, 
# \d+ ->  это любая цифра и + указывает на количетсво символов от 1 до бесконечности, тоесть дальше идут цифры минимум 1
# мы задали шаблон который ищет все числа, у которых вначале идет 
# плюс минус или ничепго, а потом несколько цифр подряд, минимум 1 цифра максимум сколько угодно

# 9. Группы
# Группы автоматически нумеруются чтобы можно было посмотреть результат только определенной гурппы
# ( (...) (...) (...))
# () - Группа 0
# () - Группа 1 
# () - Группа 2 
# () - Группа 3 

# Например поиск Юрл адреса
# # (http|https)(://)([a-zA-z0-9.-_]+)\.(ru|com) - это выражение целиком имеет группу 0
# http|https - группа 1 ищет вхождение слова http|https, определяем протокол
# :// - группа 2 текст разделитель протокола и адреса
# само название сайта группа 3 - это последовательность из букв, цифр, символов дефиса, ниднего подчеркивания и точки, последовательность может состоять минимум из одного символа
# \. - экранированный символ точки
# группа 4 - определяет домен ru|com

# \n или $n - указание номера группы, где n - это любое число или название

# (msi) - группа №1

# так же ей можно дать имя вместо номера, Грубо говоря это означает скопировать содержимое группы с указанным номером

# /(.*?) - эта конструкция обозначает любой текст


# 10. Жадные и ленивые последовательности
# (.+) или (.*) - жадный поиск (до последнего вхождения)
# (.+?) или (.*?) - ленивый поиск ( до первого вхождения)





