# Модули - библиотеки под расширением py

# как импортировать модуль
import math 
# и далее мы модем использовать определенные функции которые хранит в себе модуль math 
# мождно использовать сразу несколько модулей , перечислить их можно через запятую

import math, datetime
# пример
print(math.factorial(5)) # 120
print(datetime.datetime.now()) # время прямо сейчас выдает - 2022-07-19 23:59:17.815526

# импортирование модуля по названию файла
import Task31
print("")
print(Task31.rand_My_list) # мы импортирловали из другово проекта # [6, 1, 10, 7, 6, 6, 5]
print(f'Элементы стоящие на нечётных позициях:', Task31.num) # мы импортирловали из другово проекта - [1, 7, 6]
print(f'Cумма элементов списка =', sum(Task31.num)) # мы импортирловали из другово проекта - Cумма элементов списка = 14
print("")

# сопоставляем модуль с другим пространством имен за счет as
import Task31 as mod # мы переназовем модуль по другому и будем использовать измененное пространство имен
print(mod.rand_My_list) # [6, 1, 10, 7, 6, 6, 5] тоже самое
print(f'Элементы стоящие на нечётных позициях:', mod.num)
print(f'Cумма элементов списка =', sum(mod.num))


# можно импортировать функцию
from Task31 import numbers
print(numbers(mod.rand_My_list)) # ответ  [1, 7, 6]

# если есть несколько функций то их все импортировать можно через *
from Task31 import *
print(numbers(mod.rand_My_list)) # ответ  [1, 7, 6]
print('')


''' Чтобы запустить функцию без модулей нужно if __name__=="__main__":'''
# В Python любая переменная, начинающаяся с двух символов нижнего подчеркивания (__),
# является специальной. Это зарезервированные значения, которые выполняют определенную роль в программе.

# __name__ - указывает на имя модуля, 
# __main__ указывает на область видимости, где будет выполняться код.


def numbers(number):
    return[number[i] for i in range(len(number)) if i % 2 != 0]


if __name__=="__main__":
    print(numbers(rand_My_list))


 



